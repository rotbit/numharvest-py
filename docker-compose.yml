version: '3.8'

services:
  numharvest:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: numharvest-app
    restart: unless-stopped
    
    # 环境变量
    environment:
      - TZ=Asia/Shanghai
      - PYTHONUNBUFFERED=1
    
    # 数据卷挂载
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - numharvest-cache:/app/.cache
    
    # 网络设置
    networks:
      - numharvest-network
    
    # 内存和CPU限制
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # 健康检查
    healthcheck:
      test: ["CMD", "python", "-c", "import os; exit(0 if os.path.exists('/app/numharvest.pid') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # 可选：MongoDB 服务（如果需要本地数据库）
  mongodb:
    image: mongo:7.0
    container_name: numharvest-mongodb
    restart: unless-stopped
    
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
      - MONGO_INITDB_DATABASE=extra_numbers
    
    volumes:
      - mongodb-data:/data/db
      - ./docker/mongodb-init:/docker-entrypoint-initdb.d:ro
    
    ports:
      - "27017:27017"
    
    networks:
      - numharvest-network
    
    # MongoDB 健康检查
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 可选：PostgreSQL 服务（如果需要本地数据库）
  postgresql:
    image: postgres:16
    container_name: numharvest-postgresql
    restart: unless-stopped
    
    environment:
      - POSTGRES_DB=numbers
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespassword
      - PGDATA=/var/lib/postgresql/data/pgdata
    
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./docker/postgresql-init:/docker-entrypoint-initdb.d:ro
    
    ports:
      - "5432:5432"
    
    networks:
      - numharvest-network
    
    # PostgreSQL 健康检查
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# 网络配置
networks:
  numharvest-network:
    driver: bridge
    name: numharvest-network

# 数据卷
volumes:
  numharvest-cache:
    name: numharvest-cache
  mongodb-data:
    name: numharvest-mongodb-data
  postgresql-data:
    name: numharvest-postgresql-data